<Fluent:RibbonWindow x:Class="MainUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MainUI"
        xmlns:Fluent="clr-namespace:Fluent;assembly=Fluent"               
        mc:Ignorable="d"
        x:Name="window"
        Icon="Images/icon.ico"
        MinWidth="600"
        MinHeight="300"
        WindowStartupLocation="CenterScreen"    
        Title="Batch Rename" Height="450" Width="800"  Loaded="Window_Loaded"  SizeChanged="Window_SizeChanged" ContentRendered="renderLastContent_Click" >

    <Window.Resources>
        <local:CheckBoxConverter2 x:Key="checkboxConverter2"/>

        <local:CHeckBoxConverter x:Key="checkboxConverter"/>
        <Style TargetType="CheckBox" x:Key="sliderButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <StackPanel Orientation="Vertical">
                            <Grid >
                                <Border Width="40" Height="25" Background="LightGray" CornerRadius="10" Margin="5,0"></Border>
                                <Border x:Name="button" Height="25" Width="25" CornerRadius="20" HorizontalAlignment="Left"  ></Border>
                            </Grid>
                            <ContentPresenter x:Name="content" HorizontalAlignment="Center" Margin="0,0,0,0" Content="{TemplateBinding Content}" VerticalAlignment="Center"/>
                        </StackPanel>
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="right">
                                <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="button" Duration="0:0:0.4" From="0,0,0,0" To="25,0,0,0" >
                                    <ThicknessAnimation.EasingFunction>
                                        <CircleEase EasingMode="EaseOut"/>
                                    </ThicknessAnimation.EasingFunction>
                                </ThicknessAnimation>
                            </Storyboard>
                            <Storyboard x:Key="left">
                                <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="button" Duration="0:0:0.4" From="25,0,0,0" To="0,0,0,0" >
                                    <ThicknessAnimation.EasingFunction>
                                        <CircleEase EasingMode="EaseOut"/>
                                    </ThicknessAnimation.EasingFunction>
                                </ThicknessAnimation>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Trigger.ExitActions>
                                    <RemoveStoryboard BeginStoryboardName="leftt"></RemoveStoryboard>
                                    <BeginStoryboard Storyboard="{StaticResource right}" x:Name="rightt" ></BeginStoryboard>
                                </Trigger.ExitActions>
                                <Setter TargetName="button" Property="Background" Value="#757575"></Setter>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Trigger.ExitActions>
                                    <RemoveStoryboard BeginStoryboardName="rightt"></RemoveStoryboard>
                                    <BeginStoryboard Storyboard="{StaticResource left}" x:Name="leftt" ></BeginStoryboard>
                                </Trigger.ExitActions>
                                <Setter TargetName="button" Property="Background" Value="Blue"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <StackPanel Orientation="Vertical" Background="White">

        <Fluent:Ribbon >

            <Fluent:RibbonTabItem Header="Home">
                <Fluent:RibbonGroupBox Header="Project">

                    <StackPanel Orientation="Horizontal">
                        <Fluent:Button Header="Open" Icon="/Images/open_project.png" LargeIcon="/Images/open_project.png" Padding="4,4,4,4" Click="loadProject_Click" RenderOptions.BitmapScalingMode="HighQuality"/>
                        <Fluent:Button Header="Save" Icon="/Images/save_project.png" LargeIcon="/Images/save_project.png" Padding="4,4,4,0" Click="saveProject_Click" RenderOptions.BitmapScalingMode="HighQuality"/>
                        <CheckBox Unchecked="enableOrDisableAutoSave" Checked="enableOrDisableAutoSave" Style="{StaticResource sliderButton}" VerticalAlignment="Top" Margin="5,15,5,5" Content="Auto Save"/>
                    </StackPanel>


                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="Preset">
                    <Fluent:Button Header="Open" Icon="/Images/open_preset.png" LargeIcon="/Images/open_preset.png" Click="OpenRule_Click"  Padding="4,4,4,0" RenderOptions.BitmapScalingMode="HighQuality"/>
                    <Fluent:Button Header="Save" Icon="/Images/save_preset.png" LargeIcon="/Images/open_preset.png" Padding="4,4,4,0" Click="saveRule_Click" RenderOptions.BitmapScalingMode="HighQuality"/>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="Rename Rules">

                    <Fluent:ComboBox x:Name="rulesComboxBox" Width="200" Height="25" Margin="0, 12, 0, 0" Text="-- Choose a rule --">
                        <Fluent:ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}"/>
                            </DataTemplate>
                        </Fluent:ComboBox.ItemTemplate>
                    </Fluent:ComboBox>


                    <Fluent:Button FontSize="10" Header="Add Rules" Icon="/Images/add_rule.png" LargeIcon="/Images/add_rule.png" Padding="4, 4, 4, 0" Click="addRule_Click" RenderOptions.BitmapScalingMode="HighQuality"/>
                    <Fluent:Button  FontSize="10" Header="Reset Rules" Icon="Images/reset_rules.png" LargeIcon="Images/reset_rules.png" Padding="4, 4, 4, 0" Click="resetRule_Click" RenderOptions.BitmapScalingMode="HighQuality"/>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="Items Actions">
                    <StackPanel Orientation="Vertical">
                        <Fluent:ComboBox x:Name="typeComboBox" Width="150" Height="25" Margin="0, 12, 0, 0" Text="-- Choose items type --" SelectionChanged="typeSelectionChanged">
                            <Fluent:ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding}"/>
                                </DataTemplate>
                            </Fluent:ComboBox.ItemTemplate>
                        </Fluent:ComboBox>
                        <CheckBox x:Name="onFolder"
                                  IsChecked="{Binding Mode=OneWay, ElementName=typeComboBox, Path=SelectedItem,Converter={StaticResource checkboxConverter2}}" IsEnabled="{Binding ElementName=typeComboBox, Path=SelectedItem,Converter={StaticResource checkboxConverter2}}"
                                  Content="Find on Folder" Margin="8,8,0,0"  HorizontalAlignment="Left"/>
                    </StackPanel>
                    <Fluent:Button  FontSize="10" Header="Add Items" Icon="/Images/add_item.png" LargeIcon="/Images/add_item.png" Padding="4, 4, 4, 0" Click="AddItem_Click"  RenderOptions.BitmapScalingMode="HighQuality" />
                    <Fluent:Button  FontSize="10" Header="Reset Items" Icon="Images/reset_item.png" LargeIcon="Images/reset_item.png"  Padding="4, 4, 4, 0" Click="resetItem_Click"  RenderOptions.BitmapScalingMode="HighQuality"/>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="Batch Actions">
                    <Fluent:Button Header="Preview" Icon="Images/preview.png" LargeIcon="Images/preview.png" Padding="4, 4, 4, 0"  Click="preview_Click" RenderOptions.BitmapScalingMode="HighQuality"/>
                    <Fluent:Button Header="Start" Icon="Images/play.png" LargeIcon="Images/play.png" Padding="4, 4, 8, 0" Click="start_Click" RenderOptions.BitmapScalingMode="HighQuality"/>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
            <Fluent:RibbonTabItem Header="Options">

                <Fluent:RibbonGroupBox Header="Batch Actions">
                    <Fluent:RadioButton x:Name="renameOriginal" Header="Rename On Originals" Margin="0, 8, 0, 0" IsChecked="True"/>
                    <Fluent:RadioButton x:Name="moveToNew" Header="Move To New Folder"/>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
            <Fluent:RibbonTabItem Header="Help">
                <Fluent:RibbonGroupBox>
                    <Fluent:Button Header="Readme" Icon="Images/ic_readme.png" LargeIcon="Images/ic_readme.png" Padding="8, 8, 8,8"/>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
        </Fluent:Ribbon>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
            <StackPanel Orientation="Vertical" Margin="8,0,0,0">
                <Label Content="Chosen Rename Rule(s)"/>
                <StackPanel Orientation="Horizontal" x:Name="ruleArea">
                    <Button Width="40" Height="30" Margin="8,4,0,4" Background="Transparent" BorderThickness="0" Click="moveToTop_Click">
                        <Button.ToolTip>
                            <ToolTip Content="Move Rule To Top"/>
                        </Button.ToolTip>
                        <Image Source="Images/ic_move_to_top.png" RenderOptions.BitmapScalingMode="HighQuality" />
                    </Button>
                    <Button Width="40" Height="30" Margin="0,4,0,4" Background="Transparent" BorderThickness="0" Click="moveToPrevious_Click">
                        <Button.ToolTip>
                            <ToolTip Content="Move Rule To Previous"/>
                        </Button.ToolTip>
                        <Image Source="Images/ic_move_to_prev.png" RenderOptions.BitmapScalingMode="HighQuality"/>
                    </Button>
                    <Button Width="40" Height="30" Margin="0,4,0,4" Background="Transparent" BorderThickness="0" Click="moveToBehind_Click">
                        <Button.ToolTip>
                            <ToolTip Content="Move Rule To Behind"/>
                        </Button.ToolTip>
                        <Image Source="Images/ic_move_to_next.png" RenderOptions.BitmapScalingMode="HighQuality"/>
                    </Button>
                    <Button Width="40" Height="30" Margin="0,4,0,4" Background="Transparent" BorderThickness="0" Click="moveToBottom_Click">
                        <Button.ToolTip>
                            <ToolTip Content="Move Rule To Bottom"/>
                        </Button.ToolTip>
                        <Image Source="Images/ic_move_to_bottom.png" RenderOptions.BitmapScalingMode="HighQuality"/>
                    </Button>
                    <Button Width="40" Height="30" Margin="0,4,0,4" Background="Transparent" BorderThickness="0" Click="deleteRule_Click">
                        <Button.ToolTip>
                            <ToolTip Content="Delete Chosen Rule"/>
                        </Button.ToolTip>
                        <Image Source="Images/ic_delete_rule.png" RenderOptions.BitmapScalingMode="HighQuality"/>
                    </Button>
                </StackPanel>
                <ListView    SelectionMode="Extended" x:Name="chosenRules" Height="440" Width="240" >
                    <ListView.ItemTemplate >
                        <DataTemplate>
                            <Border CornerRadius="5"  Background="SkyBlue" Width="225">

                                <Expander x:Name="expander" Header="{Binding}" >

                                    <Expander.Style>
                                        <Style TargetType="{x:Type Expander}">
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="Green"/>
                                                </Trigger>


                                            </Style.Triggers>
                                        </Style>
                                    </Expander.Style>
                                    <Expander.HeaderTemplate >
                                        <DataTemplate>
                                            <Grid Width="220" Margin="2" >
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="3*"/>
                                                    <ColumnDefinition Width="1*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="{Binding}" Grid.Column="0"/>
                                                <CheckBox x:Name="activeCheckbox" Unchecked="activateOrDisableRule_Click" Checked="activateOrDisableRule_Click" IsChecked="{Binding RelativeSource={RelativeSource
                                                    AncestorType={x:Type Expander} },Mode=OneWay,
                                                    Path=DataContext,Converter={StaticResource checkboxConverter}
                                                    }"  Grid.Column="1"/>
                                            </Grid>
                                        </DataTemplate>
                                    </Expander.HeaderTemplate>
                                    <Expander.ContentTemplate>

                                        <DataTemplate>
                                            <Border  Padding="10" Background="White" x:Name="ExpanderContent">
                                                <StackPanel Loaded="expander_loading" />
                                            </Border>

                                        </DataTemplate>
                                    </Expander.ContentTemplate>

                                </Expander>
                            </Border>

                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

            </StackPanel>
            <StackPanel Margin="10, 0, 0, 0" Orientation="Vertical" x:Name="itemsArea" >
                <Label Content="Chosen Item(s)" Margin="8,0,0,0"/>
                <ListView AllowDrop="True" Drop="DropItem" x:Name="chosenItems" Height="478" Margin="0,0,30,0"  VerticalAlignment="Top" SizeChanged="chosenItems_SizeChanged">
                    <ListView.Resources>
                        <ContextMenu x:Key="ItemContextMenu">
                            <MenuItem Header="Remove" Click="deleteItem_Click">
                                <MenuItem.Icon>
                                    <Image Source="Images/ic_delete_rule.png"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </ListView.Resources>
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="Current Name">
                                <GridViewColumn.CellTemplate>
                                    <ItemContainerTemplate>
                                        <TextBlock  Text="{Binding currentName}"/>
                                    </ItemContainerTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="New Name"  
                                            DisplayMemberBinding="{Binding newName}" />
                            <GridViewColumn Header="Path"  
                                            DisplayMemberBinding="{Binding path}" />
                            <GridViewColumn Header="Error" 
                                            DisplayMemberBinding="{Binding error}" />
                        </GridView>
                    </ListView.View>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}" >
                            <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="Gray"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </StackPanel>
        </StackPanel>
    </StackPanel>
</Fluent:RibbonWindow>